// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	model "quiz/model"

	mock "github.com/stretchr/testify/mock"
)

// OpenAiInterface is an autogenerated mock type for the OpenAiInterface type
type OpenAiInterface struct {
	mock.Mock
}

// GenerateQuestions provides a mock function with given fields: newPromt
func (_m *OpenAiInterface) GenerateQuestions(newPromt model.OpenAiReq) []model.Questions {
	ret := _m.Called(newPromt)

	var r0 []model.Questions
	if rf, ok := ret.Get(0).(func(model.OpenAiReq) []model.Questions); ok {
		r0 = rf(newPromt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Questions)
		}
	}

	return r0
}

// NewOpenAiInterface creates a new instance of OpenAiInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOpenAiInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *OpenAiInterface {
	mock := &OpenAiInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
